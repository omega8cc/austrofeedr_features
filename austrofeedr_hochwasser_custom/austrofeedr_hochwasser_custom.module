<?php

function austrofeedr_hochwasser_custom_datastore_fusionchart_field_formatter_alter(&$chart, &$entity, $entity_type) {

	if($chart->chart_class == 'hochwasserstand_teaser' || $chart->chart_class == 'hochwasserstand_full') {
		$messstelle = $entity;

		// Require all necessary fields to be set.
		if(!(isset($messstelle->field_hw_wert_mq['und'])
		&& isset($messstelle->field_hw_wert_mjnq['und'])
		&& isset($messstelle->field_hw_wert_hq1['und'])
		&& isset($messstelle->field_hw_wert_hq10['und'])
		&& isset($messstelle->field_hw_wert_hq30['und'])
		&& isset($messstelle->field_hw_wert_hq100['und']))) {
			return;
		}

		// Extract necessary fields.
		$mq   = $messstelle->field_hw_wert_mq['und'][0]['value'];
		$mjnq = $messstelle->field_hw_wert_mjnq['und'][0]['value'];
		$hq1  = $messstelle->field_hw_wert_hq1['und'][0]['value'];
		$hq10 = $messstelle->field_hw_wert_hq10['und'][0]['value'];
		$hq30 = $messstelle->field_hw_wert_hq30['und'][0]['value'];
		$hq100 = $messstelle->field_hw_wert_hq100['und'][0]['value'];

		// Chart maximum defaults $hq100, may be overridden for teaser mode below.
		$max = $hq100;

		// Create zones info.
		$zones = array();
		$zones[] = array(
		  'startValue' => 0,
		  'endValue' => ($mq + $mjnq) / 2,
		  'color' => '088A08',
		  'displayvalue' => t('Niederwasser'),
		);
		$zones[] = array(
		  'startValue' => ($mq + $mjnq) / 2,
      'endValue' => ($hq1 + $mq) / 2,
		  'color' => '045FB4',
		  'displayvalue' => t('Mittelwasser'),
		);
		$zones[] = array(
		  'startValue' => ($hq1 + $mq) / 2,
		  'endValue' => $hq1,
		  'color' => 'AEB404',
		  'displayvalue' => t('erhöhte Wasserführung'),
		);
		$zones[] = array(
		  'startValue' => $hq1,
		  'endValue' => $hq10,
		  'color' => 'FF8000',
		  'displayvalue' => t('Hochwasserstufe 1'),
		);
		$zones[] = array(
		  'startValue' => $hq10,
		  'endValue' => $hq30,
		  'color' => 'FE2E2E',
		  'displayvalue' => t('Hochwasserstufe 2'),
		);
		$zones[] = array(
		  'startValue' => $hq30,
		  'endValue' => $hq100,
	    'color' => 'FA58F4',
		  'displayvalue' => t('Hochwasserstufe 3'),
		);

		// Generate TrendZones from zones info.
		$trendlines = array();
		foreach($zones as $zone) {
			// Only display active zone when in teaser mode.
			if($chart->chart_class == 'hochwasserstand_teaser' && isset($messstelle->field_hw_status['und'])) {
				if(isset($messstelle->field_hw_status['und'][0]['taxonomy_term'])) {
					$term = $messstelle->field_hw_status['und'][0]['taxonomy_term'];
				}
				else {
					$term = taxonomy_term_load($messstelle->field_hw_status['und'][0]['tid']);
				}
				$status = $term->name;
				if($status != $zone['displayvalue']) {
					continue;
				}
				else {
					$max = $zone['endValue'];
				}
			}
			$zone['isTrendZone'] = '1';
			$zone['valueOnRight'] = '1';
			$zone['alpha'] = '33';
			$trendlines[] = array(
		      'key' => 'line',
		      'value' => ' ',
		      'attributes'=> $zone,	// Insert zone as attribute.
			);
		}

		// Add TrendZones to chart.
		$trendlines_format = array(
	      'key' => 'trendlines',
	      'value' => $trendlines,
		);
		$chart->additional_xml = $trendlines_format;

		// Further chart settings.
		$chart->settings += array('yAxisMaxValue' => $max);
		$chart->settings += array('showValues' => 0);
	}

}

/**
 * Implementation of hook_openlayers_behaviors().
 *
 */
function austrofeedr_hochwasser_custom_openlayers_behaviors() {
  return array(
    'openlayers_behavior_hw_messstelle_popup' => array(
      'title' => t('Hochwasser Messstelle Pop Up'),
      'description' => t('AustroFeedr Hochwasser Messstelle iframe popups.'),
      'type' => 'layer',
      'path' => drupal_get_path('module', 'austrofeedr_hochwasser_custom') . '/includes/behaviors',
      'file' => 'openlayers_behavior_hw_messstelle_popup.inc',
      'behavior' => array(
        'class' => 'openlayers_behavior_hw_messstelle_popup',
        'parent' => 'openlayers_behavior_popup',
      ),
    ),
	);
}


/**
 * Implements hook_theme().
 */
function austrofeedr_hochwasser_custom_theme() {
  return array(
    // Register a default popup page template.
    'page__popup' => array(
      'render element' => 'page',
      'template' => 'page--popup',
      'path' => drupal_get_path('module', 'austrofeedr_hochwasser_custom'),
    ),
  );
}

/**
 * Implements hook_preprocess_TEMPLATE().
 *
 * Replace the page template with the slim page template if requested.
 */
function austrofeedr_hochwasser_custom_preprocess_page(&$variables) {
	if((arg(0) == 'messstellen') && (arg(2) == 'popup')) {
    $variables['theme_hook_suggestions'][] = 'page__popup';
    module_invoke('admin_menu', 'suppress');
	}
}

function austrofeedr_hochwasser_custom_menu() {
    $items['messstellen/%/popup'] = array(
	    'title' => 'Messstellen Popup',
	    'title arguments' => array(1),
	    'title callback' => 'austrofeedr_hochwasser_custom_messstellen_popup_title',
	    'page arguments' => array(1),
	    'page callback' => 'austrofeedr_hochwasser_custom_messstellen_popup_page',
	    'access arguments' => array('access content'),
	    'type' => MENU_CALLBACK,
    );
    return $items;
  }

  function austrofeedr_hochwasser_custom_messstellen_popup_title($nid) {
    $node = node_load($nid);
    $title = t($node->title);
    return $title;
  }

  function austrofeedr_hochwasser_custom_messstellen_popup_page($nid) {
    $node = node_load($nid);
    return node_view($node, 'teaser');
  }