<?php

include_once('austrofeedr_hochwasser_pegelaktuell_import.features.inc');

class HochwasserHttpClientXMLFormatter extends HttpClientXMLFormatter {

  /**
   * Override unserialization in order to preprocess Hochwasser response.
   * Strip all namespaces as otherwise it doesn't work so far :(
   */
  public function unserialize($data) {
    libxml_use_internal_errors(true);
    $data = preg_replace("/<wfs:FeatureCollection*/","<wfs:FeatureCollection>", $data);
    $xml = parent::unserialize($data);
    $array = HochwasserHttpClientXMLFormatter::xmlToArray($xml);
    return $array;
  }

  /**
   * Turns the xml structure into an array of values.
   */
  public static function xmlToArray(SimpleXMLElement $xml) {
    $children = $xml->children();
    foreach ($xml->children() as $name => $element) {
      $child = self::xmlToArray($element);
      if(!isset($result_count[$name])) {
        $result[$name] = $child;
        $result_count[$name] = 0;
      }
      else if(isset($result_count[$name]) && ($result_count[$name] == 1)) {
        $result_set[$name] = TRUE;
        $buffer = $result[$name];
        $result[$name] = array();
        $result[$name][] = $buffer;
        $result[$name][] = $child;
      }
      else {
        $result[$name][] = $child;
      }
      $result_count[$name]++;
    }
    if (!isset($result)) {
      $result = ($string = (string) $xml) ? $string : NULL;
    }
    return $result;
  }

}


/**
 * Implements hook_rules_action_info().
 */
function austrofeedr_hochwasser_pegelaktuell_import_rules_action_info() {
  return array(
    'af_rules_debug_action' => array(
      'base' => 'af_rules_debug_action',
      'label' => t('Debug'),
      'group' => t('AustroFeedr'),
      'parameter' => array(
        'entity' => array('type' => 'unknown', 'label' => t('Value to debug')),
      ),
    ),
  );
}

/**
 * Rules action for debugging values.
 */
function af_rules_debug_action($entity) {
  dpm($entity);
}


/**
 * Implementation of hook_default_wsclient_service().
 */
function austrofeedr_hochwasser_pegelaktuell_import_default_wsclient_service() {
  $services = array();

  // Google Translate service (REST)
  $service = new WSClientServiceDescription();
  $service->name = 'hw_pegelaktuell_ehyd_service';
  $service->label = 'Hochwasser Pegelaktuell eHYD Service';
  $service->url = 'http://gis.lebensministerium.at/wmsgw/';
  $service->type = 'rest';
  $service->settings['formatter'] = new HochwasserHttpClientXMLFormatter();

  // Add info about the REST service, which the user has to provide via the UI.
  $service->datatypes = array(
    'pegelaktuell_result' => array(
      'label' => 'Pegelaktuell result',
      'property info' => array(
        'featureMember' => array(
          'type' => 'list<featureMember>',
          'label' => 'Liste von Pegelaktuell featureMember',
        ),
      ),
    ),
    'featureMember' => array(
      'label' => 'Pegelaktuell featureMember',
      'property info' => array(
        'pegelaktuell' => array(
          'type' => 'pegelaktuell',
          'label' => 'Pegelaktuell item',
        ),
      ),
    ),
    'pegelaktuell' => array(
      'label' => 'Pegelaktuell item',
      'property info' => array(
        'wert' => array(
          'type' => 'decimal',
          'label' => 'Hochwasserstand',
        ),
        'zp' => array(
          'type' => 'date',
          'label' => 'Zeitpunkt',
        ),
        'dbmsnr' => array(
          'type' => 'text',
          'label' => 'Messstellen ID (dbmsnr)',
        ),
      ),
    ),
  );

  $operation['label'] = 'Pegelaktuell';
  $operation['url'] = '';
  $operation['parameter']['key'] = array('type' => 'hidden', 'default value' => '8e2b2df01bef8a1ce65c0abcf6ba39fe');
  $operation['parameter']['typename'] = array('type' => 'hidden', 'default value' => 'pegelaktuell');
  $operation['parameter']['service'] = array('type' => 'hidden', 'default value' => 'WFS');
  $operation['parameter']['REQUEST'] = array('type' => 'hidden', 'default value' => 'GetFeature');
  $operation['parameter']['VERSION'] = array('type' => 'hidden', 'default value' => '1.1.0');

  // We have to specify the version 1.0
  $operation['result'] = array('type' => 'pegelaktuell_result', 'label' => 'Pegelaktuell');
  $service->operations['pegelaktuell'] = $operation;
  $services[$service->name] = $service;

  return $services;
}
