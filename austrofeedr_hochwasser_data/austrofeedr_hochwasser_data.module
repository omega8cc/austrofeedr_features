<?php

include_once('austrofeedr_hochwasser_data.features.inc');



/**
 * Implementation of hook_enable().
 *
 * @todo: move this to a features_rebuild() callback.
 */
function austrofeedr_hochwasser_data_enable() {
	austrofeedr_hochwasser_data_voc_import();
  //austrofeedr_hochwasser_data_messstellen_import();
}

/**
 * Implementation of hook_disable().
 *
 * @todo: move this to a features_rebuild() callback.
 */
function austrofeedr_hochwasser_data_disable() {
	austrofeedr_hochwasser_data_voc_clear();
	//austrofeedr_hochwasser_data_messstellen_clear();
}



/**
 * taxonomy_csv import in order to import hochwasser vocabularies
 */

function austrofeedr_hochwasser_data_voc_import() {
  drupal_set_message(t("Importing hochwasser vocabularies"));

  $vocs = taxonomy_vocabulary_load_multiple(FALSE);
  if(count($vocs) < 1) {
    drupal_set_message(t("No hochwasser vocabularies"));
    return;
  }

  $import_dir = drupal_get_path('module', "austrofeedr_hochwasser_data") . "/taxonomy_import/";

  // Use Taxonomy CSV to import terms from a file.
  $module_dir = drupal_get_path('module', "taxonomy_csv");
  require_once("$module_dir/import/taxonomy_csv.import.api.inc");

  foreach($vocs as $voc) {
    // Import terms for each voc, where a .csv file exits.
    $filename = $import_dir . $voc->machine_name . '.csv';
    if (!file_exists($filename)) {
      continue;
    }

    // Set options for import.
    $options['import_format'] = TAXONOMY_CSV_FORMAT_PARENTS;
    $options['enclosure'] = '"';
    $options['vocabulary_target'] = 'existing';
    $options['vocabulary_id'] = $voc->vid;
    $options['check_hierarchy'] = FALSE;
    $options['set_hierarchy'] = 1;
    $options['existing_items'] = TAXONOMY_CSV_EXISTING_UPDATE_MERGE;
    $options['url'] = $filename;
    taxonomy_csv_import($options);

    drupal_set_message(t("Imported hochwasser vocabulary " . $voc->machine_name));
  }

}


function austrofeedr_hochwasser_data_voc_clear() {
  // TODO Delete terms?
}

/**
 * feeds import csv in order to create default messstellen
 * procedure adapted from https://github.com/developmentseed/mn_world
 */

function austrofeedr_hochwasser_data_messstellen_import() {
  $file = 'hw_messstellen.csv';
  $path = drupal_realpath('public://messstellen');
  if (file_prepare_directory($path, TRUE)) {
    $filepath = "{$path}/{$file}";

    // Copy messstellen csv to file directory, avoid using shell_exec() for
    // compatibility reasons.
    if (!file_exists($filepath)) {
      $src = file_get_contents(drupal_get_path('module', 'austrofeedr_hochwasser_data') . "/feeds_import/{$file}");
      file_put_contents($filepath, $src);
    }

    // Import file, clear caches to verify to make sure 'locations' importer
    // is available when installing with Aegir.
    ctools_include('export');
    ctools_export_load_object_reset('feeds_importer');
    $source = feeds_source('hw_messstellen_cvs_importer');
    $source->addConfig(
      array(
        'FeedsFileFetcher' => array(
          'source' => $filepath
        ),
      )
    );
    while (FEEDS_BATCH_COMPLETE != $source->import());
  }
}

function austrofeedr_hochwasser_data_messstellen_clear() {
  // Dump all items from locations importer.
  $source = feeds_source('hw_messstellen_cvs_importer');
  $source->clear();
}
